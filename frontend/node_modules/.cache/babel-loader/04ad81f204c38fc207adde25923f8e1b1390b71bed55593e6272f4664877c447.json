{"ast":null,"code":"// frontend/src/services/api.js\nimport axios from'axios';const API_URL=process.env.REACT_APP_API_URL||'http://localhost:8000/api/';function getCookie(name){let cookieValue=null;if(document.cookie&&document.cookie!==''){const cookies=document.cookie.split(';');for(let cookie of cookies){cookie=cookie.trim();if(cookie.startsWith(name+'=')){cookieValue=decodeURIComponent(cookie.substring(name.length+1));break;}}}return cookieValue;}// Create axios instance\nconst api=axios.create({baseURL:API_URL,headers:{'Content-Type':'application/json'},timeout:30000,// 30 seconds timeout\nwithCredentials:true});// Add a request interceptor to add the auth token to requests\napi.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers['Authorization']=`Bearer ${token}`;}// Attach CSRF token to unsafe methods (like POST)\nconst csrfToken=getCookie('csrftoken');if(['post','put','patch','delete'].includes(config.method)){config.headers['X-CSRFToken']=csrfToken;}return config;},error=>Promise.reject(error));// Add a response interceptor to refresh token if needed\napi.interceptors.response.use(response=>response,async error=>{var _error$response,_error$response$data,_error$response2,_error$response3;// Default error object to return\nconst customError={message:((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.detail)||'An unexpected error occurred',status:((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.status)||500,data:((_error$response3=error.response)===null||_error$response3===void 0?void 0:_error$response3.data)||{},originalError:error};const originalRequest=error.config;// Network error\nif(!error.response){customError.message='Network error - please check your connection';return Promise.reject(customError);}// If the error is 401 and hasn't been retried yet\nif(error.response.status===401&&!originalRequest._retry){originalRequest._retry=true;try{const refreshToken=localStorage.getItem('refreshToken');if(!refreshToken){throw new Error('No refresh token available');}// Try to get a new token\nconst response=await axios.post(`${API_URL}token/refresh/`,{refresh:refreshToken});// If refresh successful, update tokens and retry original request\nconst{access}=response.data;localStorage.setItem('token',access);// Update the authorization header\noriginalRequest.headers['Authorization']=`Bearer ${access}`;return api(originalRequest);}catch(refreshError){// If refresh fails, redirect to login\nlocalStorage.removeItem('token');localStorage.removeItem('refreshToken');localStorage.removeItem('user');customError.message='Your session has expired. Please log in again.';customError.isAuthError=true;// Redirect to login only if in browser environment\nif(typeof window!=='undefined'){window.location.href='/login';}return Promise.reject(customError);}}// Handle common HTTP error responses\nswitch(error.response.status){case 400:customError.message='Invalid request. Please check your data.';break;case 403:customError.message='You do not have permission to perform this action.';break;case 404:customError.message='The requested resource was not found.';break;case 429:customError.message='Too many requests. Please try again later.';break;case 500:customError.message='Server error. Please try again later.';break;default:// Keep default message\nbreak;}// Process validation errors (common in Django REST Framework)\nif(error.response.status===400&&typeof error.response.data==='object'){try{const messages=[];Object.entries(error.response.data).forEach(_ref=>{let[field,errors]=_ref;if(Array.isArray(errors)){messages.push(`${field}: ${errors.join(', ')}`);}else if(typeof errors==='string'){messages.push(`${field}: ${errors}`);}});if(messages.length>0){customError.message=messages.join('\\n');customError.validationErrors=error.response.data;}}catch(e){console.error('Error processing validation errors',e);}}return Promise.reject(customError);});/**\r\n * Global error handler to integrate with a notification system\r\n * @param {Error} error - Error object from API \r\n * @param {Function} notifyFn - Optional notification function\r\n * @returns {Object} Standardized error object\r\n */export const handleApiError=function(error){let notifyFn=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;// Extract the custom error properties we added in the interceptor\nconst message=error.message||'An unexpected error occurred';const status=error.status||500;// Log the error to console (can be removed in production)\nconsole.error(`API Error (${status}):`,message,error);// If a notification function is provided, use it\nif(notifyFn&&typeof notifyFn==='function'){notifyFn({type:'error',message:message,title:`Error ${status}`,duration:5000});}return{message,status,data:error.data||{},validationErrors:error.validationErrors||{},isAuthError:error.isAuthError||false};};export default api;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","getCookie","name","cookieValue","document","cookie","cookies","split","trim","startsWith","decodeURIComponent","substring","length","api","create","baseURL","headers","timeout","withCredentials","interceptors","request","use","config","token","localStorage","getItem","csrfToken","includes","method","error","Promise","reject","response","_error$response","_error$response$data","_error$response2","_error$response3","customError","message","data","detail","status","originalError","originalRequest","_retry","refreshToken","Error","post","refresh","access","setItem","refreshError","removeItem","isAuthError","window","location","href","messages","Object","entries","forEach","_ref","field","errors","Array","isArray","push","join","validationErrors","e","console","handleApiError","notifyFn","arguments","undefined","type","title","duration"],"sources":["C:/Users/partu/Desktop/militex/frontend/src/services/api.js"],"sourcesContent":["// frontend/src/services/api.js\r\nimport axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api/';\r\n\r\nfunction getCookie(name) {\r\n  let cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n    const cookies = document.cookie.split(';');\r\n    for (let cookie of cookies) {\r\n      cookie = cookie.trim();\r\n      if (cookie.startsWith(name + '=')) {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\n// Create axios instance\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  timeout: 30000, // 30 seconds timeout\r\n  withCredentials: true,\r\n});\r\n\r\n// Add a request interceptor to add the auth token to requests\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n\r\n    // Attach CSRF token to unsafe methods (like POST)\r\n    const csrfToken = getCookie('csrftoken');\r\n    if (['post', 'put', 'patch', 'delete'].includes(config.method)) {\r\n      config.headers['X-CSRFToken'] = csrfToken;\r\n    }\r\n\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// Add a response interceptor to refresh token if needed\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    // Default error object to return\r\n    const customError = {\r\n      message: error.response?.data?.detail || 'An unexpected error occurred',\r\n      status: error.response?.status || 500,\r\n      data: error.response?.data || {},\r\n      originalError: error\r\n    };\r\n    \r\n    const originalRequest = error.config;\r\n    \r\n    // Network error\r\n    if (!error.response) {\r\n      customError.message = 'Network error - please check your connection';\r\n      return Promise.reject(customError);\r\n    }\r\n    \r\n    // If the error is 401 and hasn't been retried yet\r\n    if (error.response.status === 401 && !originalRequest._retry) {\r\n      originalRequest._retry = true;\r\n      \r\n      try {\r\n        const refreshToken = localStorage.getItem('refreshToken');\r\n        if (!refreshToken) {\r\n          throw new Error('No refresh token available');\r\n        }\r\n        \r\n        // Try to get a new token\r\n        const response = await axios.post(`${API_URL}token/refresh/`, {\r\n          refresh: refreshToken,\r\n        });\r\n        \r\n        // If refresh successful, update tokens and retry original request\r\n        const { access } = response.data;\r\n        localStorage.setItem('token', access);\r\n        \r\n        // Update the authorization header\r\n        originalRequest.headers['Authorization'] = `Bearer ${access}`;\r\n        return api(originalRequest);\r\n      } catch (refreshError) {\r\n        // If refresh fails, redirect to login\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('refreshToken');\r\n        localStorage.removeItem('user');\r\n        \r\n        customError.message = 'Your session has expired. Please log in again.';\r\n        customError.isAuthError = true;\r\n        \r\n        // Redirect to login only if in browser environment\r\n        if (typeof window !== 'undefined') {\r\n          window.location.href = '/login';\r\n        }\r\n        \r\n        return Promise.reject(customError);\r\n      }\r\n    }\r\n    \r\n    // Handle common HTTP error responses\r\n    switch (error.response.status) {\r\n      case 400:\r\n        customError.message = 'Invalid request. Please check your data.';\r\n        break;\r\n      case 403:\r\n        customError.message = 'You do not have permission to perform this action.';\r\n        break;\r\n      case 404:\r\n        customError.message = 'The requested resource was not found.';\r\n        break;\r\n      case 429:\r\n        customError.message = 'Too many requests. Please try again later.';\r\n        break;\r\n      case 500:\r\n        customError.message = 'Server error. Please try again later.';\r\n        break;\r\n      default:\r\n        // Keep default message\r\n        break;\r\n    }\r\n    \r\n    // Process validation errors (common in Django REST Framework)\r\n    if (error.response.status === 400 && typeof error.response.data === 'object') {\r\n      try {\r\n        const messages = [];\r\n        Object.entries(error.response.data).forEach(([field, errors]) => {\r\n          if (Array.isArray(errors)) {\r\n            messages.push(`${field}: ${errors.join(', ')}`);\r\n          } else if (typeof errors === 'string') {\r\n            messages.push(`${field}: ${errors}`);\r\n          }\r\n        });\r\n        \r\n        if (messages.length > 0) {\r\n          customError.message = messages.join('\\n');\r\n          customError.validationErrors = error.response.data;\r\n        }\r\n      } catch (e) {\r\n        console.error('Error processing validation errors', e);\r\n      }\r\n    }\r\n    \r\n    return Promise.reject(customError);\r\n  }\r\n);\r\n\r\n/**\r\n * Global error handler to integrate with a notification system\r\n * @param {Error} error - Error object from API \r\n * @param {Function} notifyFn - Optional notification function\r\n * @returns {Object} Standardized error object\r\n */\r\nexport const handleApiError = (error, notifyFn = null) => {\r\n  // Extract the custom error properties we added in the interceptor\r\n  const message = error.message || 'An unexpected error occurred';\r\n  const status = error.status || 500;\r\n  \r\n  // Log the error to console (can be removed in production)\r\n  console.error(`API Error (${status}):`, message, error);\r\n  \r\n  // If a notification function is provided, use it\r\n  if (notifyFn && typeof notifyFn === 'function') {\r\n    notifyFn({\r\n      type: 'error',\r\n      message: message,\r\n      title: `Error ${status}`,\r\n      duration: 5000\r\n    });\r\n  }\r\n  \r\n  return {\r\n    message,\r\n    status,\r\n    data: error.data || {},\r\n    validationErrors: error.validationErrors || {},\r\n    isAuthError: error.isAuthError || false\r\n  };\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}