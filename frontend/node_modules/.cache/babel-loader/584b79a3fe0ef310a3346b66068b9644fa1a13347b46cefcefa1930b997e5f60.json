{"ast":null,"code":"// frontend/src/utils/helpers.js\n/**\r\n * Helper functions for the application\r\n *//**\r\n * Gets the full image URL by appending the base API URL if needed\r\n * @param {string} imagePath - The image path from the API\r\n * @param {string} fallbackImage - Fallback image to use if imagePath is empty\r\n * @returns {string} Complete image URL\r\n */export const getImageUrl=function(imagePath){let fallbackImage=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'/images/placeholder.jpg';if(!imagePath){return fallbackImage;}// If the image path already starts with http, it's already a complete URL\nif(imagePath.startsWith('http://')||imagePath.startsWith('https://')){return imagePath;}// If the image path starts with /media, it's a Django media file\nif(imagePath.startsWith('/media/')){return imagePath;}// If the image path starts with a slash, it's a relative path from the root\nif(imagePath.startsWith('/')){return imagePath;}// For Django media URLs that don't start with /media\nif(imagePath.includes('car_images/')||imagePath.includes('fundraiser_images/')){return`/media/${imagePath}`;}// Otherwise, prepend the API URL\nconst API_URL='/api/';return`${API_URL}${imagePath}`;};/**\r\n * Creates an object URL for a file object\r\n * @param {File} file - The file object to create a URL for\r\n * @returns {string} Object URL\r\n */export const createFilePreview=file=>{if(file&&typeof file==='object'){return URL.createObjectURL(file);}return null;};/**\r\n * Revokes an object URL to prevent memory leaks\r\n * @param {string} url - The object URL to revoke\r\n */export const revokeFilePreview=url=>{if(url&&url.startsWith('blob:')){URL.revokeObjectURL(url);}};/**\r\n * Formats currency values\r\n * @param {number} value - The value to format\r\n * @param {string} currency - The currency code (default: USD)\r\n * @returns {string} Formatted currency value\r\n */export const formatCurrency=function(value){let currency=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'USD';if(typeof value!=='number'){value=parseFloat(value)||0;}return new Intl.NumberFormat('en-US',{style:'currency',currency:currency,minimumFractionDigits:0,maximumFractionDigits:0}).format(value);};/**\r\n * Formats dates in a user-friendly way\r\n * @param {string} dateString - ISO date string\r\n * @returns {string} Formatted date\r\n */export const formatDate=dateString=>{if(!dateString)return'';try{const date=new Date(dateString);if(isNaN(date.getTime())){return dateString;// Return original if not valid date\n}return new Intl.DateTimeFormat('en-US',{year:'numeric',month:'long',day:'numeric'}).format(date);}catch(e){console.error('Date formatting error:',e);return dateString;}};/**\r\n * Truncates text to a specific length with ellipsis\r\n * @param {string} text - The text to truncate\r\n * @param {number} length - Maximum length\r\n * @returns {string} Truncated text\r\n */export const truncateText=function(text){let length=arguments.length>1&&arguments[1]!==undefined?arguments[1]:100;if(!text)return'';if(text.length<=length)return text;return text.substring(0,length)+'...';};","map":{"version":3,"names":["getImageUrl","imagePath","fallbackImage","arguments","length","undefined","startsWith","includes","API_URL","createFilePreview","file","URL","createObjectURL","revokeFilePreview","url","revokeObjectURL","formatCurrency","value","currency","parseFloat","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","format","formatDate","dateString","date","Date","isNaN","getTime","DateTimeFormat","year","month","day","e","console","error","truncateText","text","substring"],"sources":["C:/Users/partu/Desktop/militex/frontend/src/utils/helpers.js"],"sourcesContent":["// frontend/src/utils/helpers.js\r\n\r\n/**\r\n * Helper functions for the application\r\n */\r\n\r\n/**\r\n * Gets the full image URL by appending the base API URL if needed\r\n * @param {string} imagePath - The image path from the API\r\n * @param {string} fallbackImage - Fallback image to use if imagePath is empty\r\n * @returns {string} Complete image URL\r\n */\r\nexport const getImageUrl = (imagePath, fallbackImage = '/images/placeholder.jpg') => {\r\n  if (!imagePath) {\r\n    return fallbackImage;\r\n  }\r\n  \r\n  // If the image path already starts with http, it's already a complete URL\r\n  if (imagePath.startsWith('http://') || imagePath.startsWith('https://')) {\r\n    return imagePath;\r\n  }\r\n  \r\n  // If the image path starts with /media, it's a Django media file\r\n  if (imagePath.startsWith('/media/')) {\r\n    return imagePath;\r\n  }\r\n\r\n  // If the image path starts with a slash, it's a relative path from the root\r\n  if (imagePath.startsWith('/')) {\r\n    return imagePath;\r\n  }\r\n\r\n  // For Django media URLs that don't start with /media\r\n  if (imagePath.includes('car_images/') || imagePath.includes('fundraiser_images/')) {\r\n    return `/media/${imagePath}`;\r\n  }\r\n\r\n  // Otherwise, prepend the API URL\r\n  const API_URL = '/api/';\r\n  return `${API_URL}${imagePath}`;\r\n};\r\n\r\n/**\r\n * Creates an object URL for a file object\r\n * @param {File} file - The file object to create a URL for\r\n * @returns {string} Object URL\r\n */\r\nexport const createFilePreview = (file) => {\r\n  if (file && typeof file === 'object') {\r\n    return URL.createObjectURL(file);\r\n  }\r\n  return null;\r\n};\r\n\r\n/**\r\n * Revokes an object URL to prevent memory leaks\r\n * @param {string} url - The object URL to revoke\r\n */\r\nexport const revokeFilePreview = (url) => {\r\n  if (url && url.startsWith('blob:')) {\r\n    URL.revokeObjectURL(url);\r\n  }\r\n};\r\n\r\n/**\r\n * Formats currency values\r\n * @param {number} value - The value to format\r\n * @param {string} currency - The currency code (default: USD)\r\n * @returns {string} Formatted currency value\r\n */\r\nexport const formatCurrency = (value, currency = 'USD') => {\r\n  if (typeof value !== 'number') {\r\n    value = parseFloat(value) || 0;\r\n  }\r\n\r\n  return new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: currency,\r\n    minimumFractionDigits: 0,\r\n    maximumFractionDigits: 0,\r\n  }).format(value);\r\n};\r\n\r\n/**\r\n * Formats dates in a user-friendly way\r\n * @param {string} dateString - ISO date string\r\n * @returns {string} Formatted date\r\n */\r\nexport const formatDate = (dateString) => {\r\n  if (!dateString) return '';\r\n\r\n  try {\r\n    const date = new Date(dateString);\r\n    if (isNaN(date.getTime())) {\r\n      return dateString; // Return original if not valid date\r\n    }\r\n\r\n    return new Intl.DateTimeFormat('en-US', {\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric',\r\n    }).format(date);\r\n  } catch (e) {\r\n    console.error('Date formatting error:', e);\r\n    return dateString;\r\n  }\r\n};\r\n\r\n/**\r\n * Truncates text to a specific length with ellipsis\r\n * @param {string} text - The text to truncate\r\n * @param {number} length - Maximum length\r\n * @returns {string} Truncated text\r\n */\r\nexport const truncateText = (text, length = 100) => {\r\n  if (!text) return '';\r\n  if (text.length <= length) return text;\r\n  return text.substring(0, length) + '...';\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}