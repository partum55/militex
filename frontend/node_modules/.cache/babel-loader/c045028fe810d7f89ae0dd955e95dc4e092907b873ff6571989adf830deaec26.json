{"ast":null,"code":"import React,{createContext,useState,useEffect,useContext,useCallback}from'react';import AuthService from'../services/auth.service';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(null);export function useAuth(){return useContext(AuthContext);}export const AuthProvider=_ref=>{let{children}=_ref;const[currentUser,setCurrentUser]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[isAuthenticated,setIsAuthenticated]=useState(false);// Load user data on mount\nuseEffect(()=>{const initAuth=async()=>{try{setLoading(true);// Check for valid token\nif(AuthService.isAuthenticated()){// Get user data\ntry{const userData=await AuthService.getCurrentUser();setCurrentUser(userData);setIsAuthenticated(true);}catch(userError){console.error('Error fetching user data:',userError);// Try to refresh token\ntry{await AuthService.refreshToken();const userData=await AuthService.getCurrentUser();setCurrentUser(userData);setIsAuthenticated(true);}catch(refreshError){console.error('Token refresh failed:',refreshError);AuthService.logout();setCurrentUser(null);setIsAuthenticated(false);}}}else{// Try to refresh token\ntry{await AuthService.refreshToken();const userData=await AuthService.getCurrentUser();setCurrentUser(userData);setIsAuthenticated(true);}catch(refreshError){// Refresh failed, ensure logout\nAuthService.logout();setCurrentUser(null);setIsAuthenticated(false);}}}catch(err){console.error('Authentication initialization error:',err);AuthService.logout();setCurrentUser(null);setIsAuthenticated(false);setError(err);}finally{setLoading(false);}};initAuth();},[]);// Login function\nconst login=async(username,password)=>{try{setLoading(true);setError(null);const userData=await AuthService.login(username,password);setCurrentUser(userData);setIsAuthenticated(true);return userData;}catch(err){var _err$response,_err$response$data;console.error('Login error:',err);setError(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.detail)||'Failed to login. Please check your credentials.');throw err;}finally{setLoading(false);}};// Register function\nconst register=async userData=>{try{setLoading(true);setError(null);const response=await AuthService.register(userData);return response.data;}catch(err){var _err$response2;console.error('Registration error:',err);setError(((_err$response2=err.response)===null||_err$response2===void 0?void 0:_err$response2.data)||'Failed to register. Please try again.');throw err;}finally{setLoading(false);}};// Logout function\nconst logout=useCallback(()=>{AuthService.logout();setCurrentUser(null);setIsAuthenticated(false);},[]);// Update user profile\nconst updateUserProfile=async updatedData=>{try{setLoading(true);setError(null);const response=await AuthService.updateProfile(updatedData);setCurrentUser(response);return response;}catch(err){var _err$response3;console.error('Profile update error:',err);setError(((_err$response3=err.response)===null||_err$response3===void 0?void 0:_err$response3.data)||'Failed to update profile. Please try again.');throw err;}finally{setLoading(false);}};// Check token validity periodically (every 5 minutes)\nuseEffect(()=>{const checkTokenInterval=setInterval(()=>{if(isAuthenticated&&!AuthService.isAuthenticated()){// Token expired, try to refresh\nAuthService.refreshToken().then(()=>{// Refresh successful, update user info\nAuthService.getCurrentUser().then(userData=>{setCurrentUser(userData);}).catch(err=>{console.error('Failed to get current user after token refresh:',err);logout();});}).catch(()=>{// Refresh failed, logout\nlogout();});}},5*60*1000);// 5 minutes\nreturn()=>{clearInterval(checkTokenInterval);};},[isAuthenticated,logout]);// Context value\nconst value={currentUser,loading,error,isAuthenticated,login,register,logout,updateUserProfile};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};export default AuthContext;","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","useCallback","AuthService","jsx","_jsx","AuthContext","useAuth","AuthProvider","_ref","children","currentUser","setCurrentUser","loading","setLoading","error","setError","isAuthenticated","setIsAuthenticated","initAuth","userData","getCurrentUser","userError","console","refreshToken","refreshError","logout","err","login","username","password","_err$response","_err$response$data","response","data","detail","register","_err$response2","updateUserProfile","updatedData","updateProfile","_err$response3","checkTokenInterval","setInterval","then","catch","clearInterval","value","Provider"],"sources":["C:/Users/partu/Desktop/militex/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext, useCallback } from 'react';\r\nimport AuthService from '../services/auth.service';\r\n\r\nconst AuthContext = createContext(null);\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  // Load user data on mount\r\n  useEffect(() => {\r\n    const initAuth = async () => {\r\n      try {\r\n        setLoading(true);\r\n\r\n        // Check for valid token\r\n        if (AuthService.isAuthenticated()) {\r\n          // Get user data\r\n          try {\r\n            const userData = await AuthService.getCurrentUser();\r\n            setCurrentUser(userData);\r\n            setIsAuthenticated(true);\r\n          } catch (userError) {\r\n            console.error('Error fetching user data:', userError);\r\n\r\n            // Try to refresh token\r\n            try {\r\n              await AuthService.refreshToken();\r\n              const userData = await AuthService.getCurrentUser();\r\n              setCurrentUser(userData);\r\n              setIsAuthenticated(true);\r\n            } catch (refreshError) {\r\n              console.error('Token refresh failed:', refreshError);\r\n              AuthService.logout();\r\n              setCurrentUser(null);\r\n              setIsAuthenticated(false);\r\n            }\r\n          }\r\n        } else {\r\n          // Try to refresh token\r\n          try {\r\n            await AuthService.refreshToken();\r\n            const userData = await AuthService.getCurrentUser();\r\n            setCurrentUser(userData);\r\n            setIsAuthenticated(true);\r\n          } catch (refreshError) {\r\n            // Refresh failed, ensure logout\r\n            AuthService.logout();\r\n            setCurrentUser(null);\r\n            setIsAuthenticated(false);\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.error('Authentication initialization error:', err);\r\n        AuthService.logout();\r\n        setCurrentUser(null);\r\n        setIsAuthenticated(false);\r\n        setError(err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    initAuth();\r\n  }, []);\r\n\r\n  // Login function\r\n  const login = async (username, password) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const userData = await AuthService.login(username, password);\r\n      setCurrentUser(userData);\r\n      setIsAuthenticated(true);\r\n\r\n      return userData;\r\n    } catch (err) {\r\n      console.error('Login error:', err);\r\n      setError(err.response?.data?.detail || 'Failed to login. Please check your credentials.');\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Register function\r\n  const register = async (userData) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const response = await AuthService.register(userData);\r\n      return response.data;\r\n    } catch (err) {\r\n      console.error('Registration error:', err);\r\n      setError(err.response?.data || 'Failed to register. Please try again.');\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = useCallback(() => {\r\n    AuthService.logout();\r\n    setCurrentUser(null);\r\n    setIsAuthenticated(false);\r\n  }, []);\r\n\r\n  // Update user profile\r\n  const updateUserProfile = async (updatedData) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const response = await AuthService.updateProfile(updatedData);\r\n      setCurrentUser(response);\r\n\r\n      return response;\r\n    } catch (err) {\r\n      console.error('Profile update error:', err);\r\n      setError(err.response?.data || 'Failed to update profile. Please try again.');\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Check token validity periodically (every 5 minutes)\r\n  useEffect(() => {\r\n    const checkTokenInterval = setInterval(() => {\r\n      if (isAuthenticated && !AuthService.isAuthenticated()) {\r\n        // Token expired, try to refresh\r\n        AuthService.refreshToken()\r\n          .then(() => {\r\n            // Refresh successful, update user info\r\n            AuthService.getCurrentUser()\r\n              .then(userData => {\r\n                setCurrentUser(userData);\r\n              })\r\n              .catch(err => {\r\n                console.error('Failed to get current user after token refresh:', err);\r\n                logout();\r\n              });\r\n          })\r\n          .catch(() => {\r\n            // Refresh failed, logout\r\n            logout();\r\n          });\r\n      }\r\n    }, 5 * 60 * 1000); // 5 minutes\r\n\r\n    return () => {\r\n      clearInterval(checkTokenInterval);\r\n    };\r\n  }, [isAuthenticated, logout]);\r\n\r\n  // Context value\r\n  const value = {\r\n    currentUser,\r\n    loading,\r\n    error,\r\n    isAuthenticated,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateUserProfile\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}