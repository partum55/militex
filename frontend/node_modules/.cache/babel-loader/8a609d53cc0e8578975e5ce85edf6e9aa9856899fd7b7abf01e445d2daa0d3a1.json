{"ast":null,"code":"// Update your src/services/api.js\nimport axios from'axios';// Create an axios instance for API calls\nconst api=axios.create({baseURL:'/api/',// Use relative URL\nheaders:{'Content-Type':'application/json'},withCredentials:true// Important for cookies\n});// Request interceptor for adding the auth token\napi.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers['Authorization']=`Bearer ${token}`;}return config;},error=>Promise.reject(error));// Response interceptor for token refresh\napi.interceptors.response.use(response=>response,async error=>{const originalRequest=error.config;// If error is 401 and we haven't tried refreshing yet\nif(error.response.status===401&&!originalRequest._retry){originalRequest._retry=true;try{const refreshToken=localStorage.getItem('refreshToken');const response=await axios.post('/api/token/refresh/',{refresh:refreshToken});if(response.data.access){localStorage.setItem('token',response.data.access);api.defaults.headers.common['Authorization']=`Bearer ${response.data.access}`;// Retry the original request\nreturn api(originalRequest);}}catch(refreshError){// If refresh fails, clear tokens and redirect to login\nlocalStorage.removeItem('token');localStorage.removeItem('refreshToken');window.location.href='/login';return Promise.reject(refreshError);}}return Promise.reject(error);});export default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","withCredentials","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject","response","originalRequest","status","_retry","refreshToken","post","refresh","data","access","setItem","defaults","common","refreshError","removeItem","window","location","href"],"sources":["C:/Users/bogda/OneDrive/Робочий стіл/Pyton programs/Web application OP/MILITEX/militex/frontend/src/services/api.js"],"sourcesContent":["// Update your src/services/api.js\r\n\r\nimport axios from 'axios';\r\n\r\n// Create an axios instance for API calls\r\nconst api = axios.create({\r\n  baseURL: '/api/',  // Use relative URL\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  withCredentials: true, // Important for cookies\r\n});\r\n\r\n// Request interceptor for adding the auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// Response interceptor for token refresh\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    const originalRequest = error.config;\r\n\r\n    // If error is 401 and we haven't tried refreshing yet\r\n    if (error.response.status === 401 && !originalRequest._retry) {\r\n      originalRequest._retry = true;\r\n\r\n      try {\r\n        const refreshToken = localStorage.getItem('refreshToken');\r\n        const response = await axios.post('/api/token/refresh/', {\r\n          refresh: refreshToken\r\n        });\r\n\r\n        if (response.data.access) {\r\n          localStorage.setItem('token', response.data.access);\r\n          api.defaults.headers.common['Authorization'] = `Bearer ${response.data.access}`;\r\n\r\n          // Retry the original request\r\n          return api(originalRequest);\r\n        }\r\n      } catch (refreshError) {\r\n        // If refresh fails, clear tokens and redirect to login\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('refreshToken');\r\n        window.location.href = '/login';\r\n        return Promise.reject(refreshError);\r\n      }\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;\r\n"],"mappings":"AAAA;AAEA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB;AACA,KAAM,CAAAC,GAAG,CAAGD,KAAK,CAACE,MAAM,CAAC,CACvBC,OAAO,CAAE,OAAO,CAAG;AACnBC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,eAAe,CAAE,IAAM;AACzB,CAAC,CAAC,CAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,EAAK,CACV,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAIF,KAAK,CAAE,CACTD,MAAM,CAACL,OAAO,CAAC,eAAe,CAAC,CAAG,UAAUM,KAAK,EAAE,CACrD,CACA,MAAO,CAAAD,MAAM,CACf,CAAC,CACAI,KAAK,EAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC,CAED;AACAZ,GAAG,CAACK,YAAY,CAACU,QAAQ,CAACR,GAAG,CAC1BQ,QAAQ,EAAKA,QAAQ,CACtB,KAAO,CAAAH,KAAK,EAAK,CACf,KAAM,CAAAI,eAAe,CAAGJ,KAAK,CAACJ,MAAM,CAEpC;AACA,GAAII,KAAK,CAACG,QAAQ,CAACE,MAAM,GAAK,GAAG,EAAI,CAACD,eAAe,CAACE,MAAM,CAAE,CAC5DF,eAAe,CAACE,MAAM,CAAG,IAAI,CAE7B,GAAI,CACF,KAAM,CAAAC,YAAY,CAAGT,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CACzD,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAhB,KAAK,CAACqB,IAAI,CAAC,qBAAqB,CAAE,CACvDC,OAAO,CAAEF,YACX,CAAC,CAAC,CAEF,GAAIJ,QAAQ,CAACO,IAAI,CAACC,MAAM,CAAE,CACxBb,YAAY,CAACc,OAAO,CAAC,OAAO,CAAET,QAAQ,CAACO,IAAI,CAACC,MAAM,CAAC,CACnDvB,GAAG,CAACyB,QAAQ,CAACtB,OAAO,CAACuB,MAAM,CAAC,eAAe,CAAC,CAAG,UAAUX,QAAQ,CAACO,IAAI,CAACC,MAAM,EAAE,CAE/E;AACA,MAAO,CAAAvB,GAAG,CAACgB,eAAe,CAAC,CAC7B,CACF,CAAE,MAAOW,YAAY,CAAE,CACrB;AACAjB,YAAY,CAACkB,UAAU,CAAC,OAAO,CAAC,CAChClB,YAAY,CAACkB,UAAU,CAAC,cAAc,CAAC,CACvCC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAG,QAAQ,CAC/B,MAAO,CAAAlB,OAAO,CAACC,MAAM,CAACa,YAAY,CAAC,CACrC,CACF,CAEA,MAAO,CAAAd,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAC9B,CACF,CAAC,CAED,cAAe,CAAAZ,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}