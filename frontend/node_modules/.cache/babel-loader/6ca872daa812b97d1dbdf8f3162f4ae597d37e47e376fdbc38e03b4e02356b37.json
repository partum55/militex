{"ast":null,"code":"import api from'./api';import axios from'axios';function getCookie(name){let cookieValue=null;if(document.cookie&&document.cookie!==''){const cookies=document.cookie.split(';');for(let cookie of cookies){cookie=cookie.trim();if(cookie.startsWith(name+'=')){cookieValue=decodeURIComponent(cookie.substring(name.length+1));break;}}}return cookieValue;}const FundraiserService={getAllFundraisers:async()=>{try{const response=await api.get('fundraisers/');return response.data||response.data.results;}catch(error){throw error;}},getFundraiserById:async id=>{try{const response=await api.get(`fundraisers/${id}/`);return response.data;}catch(error){throw error;}},createFundraiser:async fundraiserData=>{const formData=new FormData();Object.keys(fundraiserData).forEach(key=>{formData.append(key,fundraiserData[key]);});try{// Спочатку отримай CSRF токен\nawait axios.get('/csrf/',{withCredentials:true});const csrftoken=getCookie('csrftoken');// Потім зроби запит на створення\nconst response=await api.post('fundraisers/',formData,{headers:{'Content-Type':'multipart/form-data','X-CSRFToken':csrftoken},withCredentials:true});return response.data;}catch(error){throw error;}},donate:async(fundraiserId,donationData)=>{try{const response=await api.post(`fundraisers/${fundraiserId}/donate/`,donationData);return response.data;}catch(error){throw error;}}};export default FundraiserService;","map":{"version":3,"names":["api","axios","getCookie","name","cookieValue","document","cookie","cookies","split","trim","startsWith","decodeURIComponent","substring","length","FundraiserService","getAllFundraisers","response","get","data","results","error","getFundraiserById","id","createFundraiser","fundraiserData","formData","FormData","Object","keys","forEach","key","append","withCredentials","csrftoken","post","headers","donate","fundraiserId","donationData"],"sources":["C:/Users/bogda/Pyton programs/Web application OP/MILITEX/militex/frontend/src/services/fundraiser.service.js"],"sourcesContent":["import api from './api';\r\nimport axios from 'axios';\r\n\r\nfunction getCookie(name) {\r\n  let cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n    const cookies = document.cookie.split(';');\r\n    for (let cookie of cookies) {\r\n      cookie = cookie.trim();\r\n      if (cookie.startsWith(name + '=')) {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nconst FundraiserService = {\r\n  getAllFundraisers: async () => {\r\n    try {\r\n      const response = await api.get('fundraisers/');\r\n      return response.data || response.data.results;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  getFundraiserById: async (id) => {\r\n    try {\r\n      const response = await api.get(`fundraisers/${id}/`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  createFundraiser: async (fundraiserData) => {\r\n    const formData = new FormData();\r\n\r\n    Object.keys(fundraiserData).forEach((key) => {\r\n      formData.append(key, fundraiserData[key]);\r\n    });\r\n\r\n    try {\r\n      // Спочатку отримай CSRF токен\r\n      await axios.get('/csrf/', { withCredentials: true });\r\n      const csrftoken = getCookie('csrftoken');\r\n\r\n      // Потім зроби запит на створення\r\n      const response = await api.post('fundraisers/', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          'X-CSRFToken': csrftoken,\r\n        },\r\n        withCredentials: true,\r\n      });\r\n\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  donate: async (fundraiserId, donationData) => {\r\n    try {\r\n      const response = await api.post(`fundraisers/${fundraiserId}/donate/`, donationData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n};\r\n\r\n\r\nexport default FundraiserService;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}