{"ast":null,"code":"import axios from'axios';// Create an axios instance for API calls\nconst api=axios.create({baseURL:'/api/',// Use relative URL\nheaders:{'Content-Type':'application/json'},withCredentials:true// Important for cookies\n});// Add logging for debugging API requests\napi.interceptors.request.use(config=>{var _config$method;console.log(`API Request: ${(_config$method=config.method)===null||_config$method===void 0?void 0:_config$method.toUpperCase()} ${config.url}`,config.params||{});const token=localStorage.getItem('token');if(token){config.headers['Authorization']=`Bearer ${token}`;}return config;},error=>{console.error('API Request Error:',error);return Promise.reject(error);});// Response interceptor for token refresh and error handling\napi.interceptors.response.use(response=>{// Optional: Log successful responses\n// console.log('API Response:', response.data);\nreturn response;},async error=>{var _error$response,_error$response2;// Log the error for debugging\nconsole.error('API Error:',((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data)||error.message);const originalRequest=error.config;// If error is 401 and we haven't tried refreshing yet\nif(((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.status)===401&&!originalRequest._retry){originalRequest._retry=true;try{console.log('Attempting token refresh...');const refreshToken=localStorage.getItem('refreshToken');if(!refreshToken){throw new Error('No refresh token available');}const response=await axios.post('/api/token/refresh/',{refresh:refreshToken},{withCredentials:true// Ensure cookies are sent with this request too\n});if(response.data.access){console.log('Token refresh successful');localStorage.setItem('token',response.data.access);api.defaults.headers.common['Authorization']=`Bearer ${response.data.access}`;// Update the authorization header in the original request\noriginalRequest.headers['Authorization']=`Bearer ${response.data.access}`;// Retry the original request\nreturn axios(originalRequest);}else{throw new Error('Access token not received');}}catch(refreshError){console.error('Token refresh failed:',refreshError);// If refresh fails, clear tokens and redirect to login\nlocalStorage.removeItem('token');localStorage.removeItem('refreshToken');// Add a small delay before redirecting\nsetTimeout(()=>{window.location.href='/login';},100);return Promise.reject(refreshError);}}return Promise.reject(error);});// Export the api instance\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","withCredentials","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","params","token","localStorage","getItem","error","Promise","reject","response","_error$response","_error$response2","data","message","originalRequest","status","_retry","refreshToken","Error","post","refresh","access","setItem","defaults","common","refreshError","removeItem","setTimeout","window","location","href"],"sources":["C:/Users/partu/Desktop/militex/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Create an axios instance for API calls\r\nconst api = axios.create({\r\n  baseURL: '/api/',  // Use relative URL\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  withCredentials: true, // Important for cookies\r\n});\r\n\r\n// Add logging for debugging API requests\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    console.log(`API Request: ${config.method?.toUpperCase()} ${config.url}`, config.params || {});\r\n    \r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('API Request Error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor for token refresh and error handling\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    // Optional: Log successful responses\r\n    // console.log('API Response:', response.data);\r\n    return response;\r\n  },\r\n  async (error) => {\r\n    // Log the error for debugging\r\n    console.error('API Error:', error.response?.data || error.message);\r\n    \r\n    const originalRequest = error.config;\r\n\r\n    // If error is 401 and we haven't tried refreshing yet\r\n    if (error.response?.status === 401 && !originalRequest._retry) {\r\n      originalRequest._retry = true;\r\n\r\n      try {\r\n        console.log('Attempting token refresh...');\r\n        const refreshToken = localStorage.getItem('refreshToken');\r\n        \r\n        if (!refreshToken) {\r\n          throw new Error('No refresh token available');\r\n        }\r\n        \r\n        const response = await axios.post('/api/token/refresh/', {\r\n          refresh: refreshToken\r\n        }, {\r\n          withCredentials: true // Ensure cookies are sent with this request too\r\n        });\r\n\r\n        if (response.data.access) {\r\n          console.log('Token refresh successful');\r\n          localStorage.setItem('token', response.data.access);\r\n          api.defaults.headers.common['Authorization'] = `Bearer ${response.data.access}`;\r\n\r\n          // Update the authorization header in the original request\r\n          originalRequest.headers['Authorization'] = `Bearer ${response.data.access}`;\r\n\r\n          // Retry the original request\r\n          return axios(originalRequest);\r\n        } else {\r\n          throw new Error('Access token not received');\r\n        }\r\n      } catch (refreshError) {\r\n        console.error('Token refresh failed:', refreshError);\r\n        \r\n        // If refresh fails, clear tokens and redirect to login\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('refreshToken');\r\n        \r\n        // Add a small delay before redirecting\r\n        setTimeout(() => {\r\n          window.location.href = '/login';\r\n        }, 100);\r\n        \r\n        return Promise.reject(refreshError);\r\n      }\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Export the api instance\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}