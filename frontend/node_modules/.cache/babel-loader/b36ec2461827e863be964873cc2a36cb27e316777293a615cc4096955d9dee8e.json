{"ast":null,"code":"import api from './api';\nconst FundraiserService = {\n  getAllFundraisers: async () => {\n    try {\n      const response = await api.get('fundraisers/');\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  getFundraiserById: async id => {\n    try {\n      const response = await api.get(`fundraisers/${id}/`);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  createFundraiser: async fundraiserData => {\n    // Use FormData for image upload\n    const formData = new FormData();\n    Object.keys(fundraiserData).forEach(key => {\n      if (key === 'image') {\n        formData.append(key, fundraiserData[key]);\n      } else {\n        formData.append(key, fundraiserData[key]);\n      }\n    });\n    try {\n      const response = await api.post('fundraisers/', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  donate: async (fundraiserId, donationData) => {\n    try {\n      const response = await api.post(`fundraisers/${fundraiserId}/donate/`, donationData);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n};\nexport default FundraiserService;","map":{"version":3,"names":["api","FundraiserService","getAllFundraisers","response","get","data","error","getFundraiserById","id","createFundraiser","fundraiserData","formData","FormData","Object","keys","forEach","key","append","post","headers","donate","fundraiserId","donationData"],"sources":["C:/Users/partu/Desktop/militex/frontend/src/services/fundraiser.service.js"],"sourcesContent":["import api from './api';\r\n\r\nconst FundraiserService = {\r\n  getAllFundraisers: async () => {\r\n    try {\r\n      const response = await api.get('fundraisers/');\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  getFundraiserById: async (id) => {\r\n    try {\r\n      const response = await api.get(`fundraisers/${id}/`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  createFundraiser: async (fundraiserData) => {\r\n    // Use FormData for image upload\r\n    const formData = new FormData();\r\n    \r\n    Object.keys(fundraiserData).forEach((key) => {\r\n      if (key === 'image') {\r\n        formData.append(key, fundraiserData[key]);\r\n      } else {\r\n        formData.append(key, fundraiserData[key]);\r\n      }\r\n    });\r\n    \r\n    try {\r\n      const response = await api.post('fundraisers/', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  donate: async (fundraiserId, donationData) => {\r\n    try {\r\n      const response = await api.post(`fundraisers/${fundraiserId}/donate/`, donationData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n};\r\n\r\nexport default FundraiserService;\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,MAAMC,iBAAiB,GAAG;EACxBC,iBAAiB,EAAE,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,cAAc,CAAC;MAC9C,OAAOD,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAEDC,iBAAiB,EAAE,MAAOC,EAAE,IAAK;IAC/B,IAAI;MACF,MAAML,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,eAAeI,EAAE,GAAG,CAAC;MACpD,OAAOL,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAEDG,gBAAgB,EAAE,MAAOC,cAAc,IAAK;IAC1C;IACA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAE/BC,MAAM,CAACC,IAAI,CAACJ,cAAc,CAAC,CAACK,OAAO,CAAEC,GAAG,IAAK;MAC3C,IAAIA,GAAG,KAAK,OAAO,EAAE;QACnBL,QAAQ,CAACM,MAAM,CAACD,GAAG,EAAEN,cAAc,CAACM,GAAG,CAAC,CAAC;MAC3C,CAAC,MAAM;QACLL,QAAQ,CAACM,MAAM,CAACD,GAAG,EAAEN,cAAc,CAACM,GAAG,CAAC,CAAC;MAC3C;IACF,CAAC,CAAC;IAEF,IAAI;MACF,MAAMb,QAAQ,GAAG,MAAMH,GAAG,CAACkB,IAAI,CAAC,cAAc,EAAEP,QAAQ,EAAE;QACxDQ,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACF,OAAOhB,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAEDc,MAAM,EAAE,MAAAA,CAAOC,YAAY,EAAEC,YAAY,KAAK;IAC5C,IAAI;MACF,MAAMnB,QAAQ,GAAG,MAAMH,GAAG,CAACkB,IAAI,CAAC,eAAeG,YAAY,UAAU,EAAEC,YAAY,CAAC;MACpF,OAAOnB,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF;AACF,CAAC;AAED,eAAeL,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}