{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\partu\\\\Desktop\\\\militex\\\\frontend\\\\src\\\\pages\\\\LoginPage.jsx\",\n  _s = $RefreshSig$();\n// src/pages/LoginPage.jsx\nimport React, { useState } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport \"./LoginPage.css\"; // Ensure this path is correct\nimport axios from 'axios';\n\n// Get CSRF token from cookies\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getCookie = name => {\n  let cookieValue = null;\n  if (document.cookie && document.cookie !== '') {\n    const cookies = document.cookie.split(';');\n    for (let cookie of cookies) {\n      cookie = cookie.trim();\n      if (cookie.startsWith(name + '=')) {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n};\nconst csrfToken = getCookie('csrftoken');\n\n// Set axios default header for CSRF token\naxios.defaults.headers.common[\"X-CSRFToken\"] = csrfToken;\nconst LoginPage = () => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\"http://127.0.0.1:8000/api/login/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      const data = await response.json();\n      if (data.token) {\n        localStorage.setItem(\"token\", data.token);\n        navigate(\"/\"); // Navigate to home page upon successful login\n      } else {\n        alert(\"Login failed: \" + JSON.stringify(data));\n      }\n    } catch (error) {\n      console.error(\"Error during login:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"login-title\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"login-label\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"login-input\",\n          placeholder: \"Enter your username\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"login-label\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"login-input\",\n          placeholder: \"Enter your password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"login-button\",\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"login-switch\",\n        children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signup\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"JBV44+s3MGwvm5P+UO1Bab3M9dc=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","Link","axios","jsxDEV","_jsxDEV","getCookie","name","cookieValue","document","cookie","cookies","split","trim","startsWith","decodeURIComponent","substring","length","csrfToken","defaults","headers","common","LoginPage","_s","username","setUsername","password","setPassword","navigate","handleLogin","e","preventDefault","response","fetch","method","body","JSON","stringify","data","json","token","localStorage","setItem","alert","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","to","_c","$RefreshReg$"],"sources":["C:/Users/partu/Desktop/militex/frontend/src/pages/LoginPage.jsx"],"sourcesContent":["// src/pages/LoginPage.jsx\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport \"./LoginPage.css\"; // Ensure this path is correct\r\nimport axios from 'axios';\r\n\r\n// Get CSRF token from cookies\r\nconst getCookie = (name) => {\r\n  let cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n    const cookies = document.cookie.split(';');\r\n    for (let cookie of cookies) {\r\n      cookie = cookie.trim();\r\n      if (cookie.startsWith(name + '=')) {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n};\r\n\r\nconst csrfToken = getCookie('csrftoken');\r\n\r\n// Set axios default header for CSRF token\r\naxios.defaults.headers.common[\"X-CSRFToken\"] = csrfToken;\r\n\r\n\r\nconst LoginPage = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch(\"http://127.0.0.1:8000/api/login/\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ username, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.token) {\r\n        localStorage.setItem(\"token\", data.token);\r\n        navigate(\"/\"); // Navigate to home page upon successful login\r\n      } else {\r\n        alert(\"Login failed: \" + JSON.stringify(data));\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error during login:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-page\">\r\n      <div className=\"login-container\">\r\n        <h2 className=\"login-title\">Log In</h2>\r\n        <form onSubmit={handleLogin} className=\"login-form\">\r\n          <label className=\"login-label\">Username</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"login-input\"\r\n            placeholder=\"Enter your username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n\r\n          <label className=\"login-label\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"login-input\"\r\n            placeholder=\"Enter your password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n\r\n          <button type=\"submit\" className=\"login-button\">\r\n            Log In\r\n          </button>\r\n        </form>\r\n        <p className=\"login-switch\">\r\n          Don't have an account? <Link to=\"/signup\">Sign Up</Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}