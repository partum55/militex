{"ast":null,"code":"import api from'./api';const CarService={getAllCars:async params=>{try{const response=await api.get('cars/',{params});return response.data;}catch(error){throw error;}},getCarById:async id=>{try{const response=await api.get(`cars/${id}/`);return response.data;}catch(error){throw error;}},createCar:async carData=>{// For file uploads, use FormData\nconst formData=new FormData();// Add car data to formData\nObject.keys(carData).forEach(key=>{if(key!=='uploaded_images'){formData.append(key,carData[key]);}});// Add images to formData\nif(carData.uploaded_images){carData.uploaded_images.forEach(image=>{formData.append('uploaded_images',image);});}try{const response=await api.post('cars/',formData,{headers:{'Content-Type':'multipart/form-data'}});return response.data;}catch(error){throw error;}},updateCar:async(id,carData)=>{// Similar to createCar, use FormData for updates with images\nconst formData=new FormData();Object.keys(carData).forEach(key=>{if(key!=='uploaded_images'){formData.append(key,carData[key]);}});if(carData.uploaded_images){carData.uploaded_images.forEach(image=>{formData.append('uploaded_images',image);});}try{const response=await api.patch(`cars/${id}/`,formData,{headers:{'Content-Type':'multipart/form-data'}});return response.data;}catch(error){throw error;}},deleteCar:async id=>{try{await api.delete(`cars/${id}/`);return true;}catch(error){throw error;}},getMyListings:async()=>{try{const response=await api.get('cars/my_listings/');return response.data;}catch(error){throw error;}}};export default CarService;","map":{"version":3,"names":["api","CarService","getAllCars","params","response","get","data","error","getCarById","id","createCar","carData","formData","FormData","Object","keys","forEach","key","append","uploaded_images","image","post","headers","updateCar","patch","deleteCar","delete","getMyListings"],"sources":["C:/Users/bogda/OneDrive/Робочий стіл/Pyton programs/Web application OP/MILITEX/militex/frontend/src/services/car.service.js"],"sourcesContent":["import api from './api';\r\n\r\nconst CarService = {\r\n  getAllCars: async (params) => {\r\n    try {\r\n      const response = await api.get('cars/', { params });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getCarById: async (id) => {\r\n    try {\r\n      const response = await api.get(`cars/${id}/`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  createCar: async (carData) => {\r\n    // For file uploads, use FormData\r\n    const formData = new FormData();\r\n\r\n    // Add car data to formData\r\n    Object.keys(carData).forEach((key) => {\r\n      if (key !== 'uploaded_images') {\r\n        formData.append(key, carData[key]);\r\n      }\r\n    });\r\n\r\n    // Add images to formData\r\n    if (carData.uploaded_images) {\r\n      carData.uploaded_images.forEach((image) => {\r\n        formData.append('uploaded_images', image);\r\n      });\r\n    }\r\n\r\n    try {\r\n      const response = await api.post('cars/', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  updateCar: async (id, carData) => {\r\n    // Similar to createCar, use FormData for updates with images\r\n    const formData = new FormData();\r\n\r\n    Object.keys(carData).forEach((key) => {\r\n      if (key !== 'uploaded_images') {\r\n        formData.append(key, carData[key]);\r\n      }\r\n    });\r\n\r\n    if (carData.uploaded_images) {\r\n      carData.uploaded_images.forEach((image) => {\r\n        formData.append('uploaded_images', image);\r\n      });\r\n    }\r\n\r\n    try {\r\n      const response = await api.patch(`cars/${id}/`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  deleteCar: async (id) => {\r\n    try {\r\n      await api.delete(`cars/${id}/`);\r\n      return true;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getMyListings: async () => {\r\n    try {\r\n      const response = await api.get('cars/my_listings/');\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n};\r\n\r\nexport default CarService;\r\n"],"mappings":"AAAA,MAAO,CAAAA,GAAG,KAAM,OAAO,CAEvB,KAAM,CAAAC,UAAU,CAAG,CACjBC,UAAU,CAAE,KAAO,CAAAC,MAAM,EAAK,CAC5B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAJ,GAAG,CAACK,GAAG,CAAC,OAAO,CAAE,CAAEF,MAAO,CAAC,CAAC,CACnD,MAAO,CAAAC,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAEDC,UAAU,CAAE,KAAO,CAAAC,EAAE,EAAK,CACxB,GAAI,CACF,KAAM,CAAAL,QAAQ,CAAG,KAAM,CAAAJ,GAAG,CAACK,GAAG,CAAC,QAAQI,EAAE,GAAG,CAAC,CAC7C,MAAO,CAAAL,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAEDG,SAAS,CAAE,KAAO,CAAAC,OAAO,EAAK,CAC5B;AACA,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAE/B;AACAC,MAAM,CAACC,IAAI,CAACJ,OAAO,CAAC,CAACK,OAAO,CAAEC,GAAG,EAAK,CACpC,GAAIA,GAAG,GAAK,iBAAiB,CAAE,CAC7BL,QAAQ,CAACM,MAAM,CAACD,GAAG,CAAEN,OAAO,CAACM,GAAG,CAAC,CAAC,CACpC,CACF,CAAC,CAAC,CAEF;AACA,GAAIN,OAAO,CAACQ,eAAe,CAAE,CAC3BR,OAAO,CAACQ,eAAe,CAACH,OAAO,CAAEI,KAAK,EAAK,CACzCR,QAAQ,CAACM,MAAM,CAAC,iBAAiB,CAAEE,KAAK,CAAC,CAC3C,CAAC,CAAC,CACJ,CAEA,GAAI,CACF,KAAM,CAAAhB,QAAQ,CAAG,KAAM,CAAAJ,GAAG,CAACqB,IAAI,CAAC,OAAO,CAAET,QAAQ,CAAE,CACjDU,OAAO,CAAE,CACP,cAAc,CAAE,qBAClB,CACF,CAAC,CAAC,CACF,MAAO,CAAAlB,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAEDgB,SAAS,CAAE,KAAAA,CAAOd,EAAE,CAAEE,OAAO,GAAK,CAChC;AACA,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAE/BC,MAAM,CAACC,IAAI,CAACJ,OAAO,CAAC,CAACK,OAAO,CAAEC,GAAG,EAAK,CACpC,GAAIA,GAAG,GAAK,iBAAiB,CAAE,CAC7BL,QAAQ,CAACM,MAAM,CAACD,GAAG,CAAEN,OAAO,CAACM,GAAG,CAAC,CAAC,CACpC,CACF,CAAC,CAAC,CAEF,GAAIN,OAAO,CAACQ,eAAe,CAAE,CAC3BR,OAAO,CAACQ,eAAe,CAACH,OAAO,CAAEI,KAAK,EAAK,CACzCR,QAAQ,CAACM,MAAM,CAAC,iBAAiB,CAAEE,KAAK,CAAC,CAC3C,CAAC,CAAC,CACJ,CAEA,GAAI,CACF,KAAM,CAAAhB,QAAQ,CAAG,KAAM,CAAAJ,GAAG,CAACwB,KAAK,CAAC,QAAQf,EAAE,GAAG,CAAEG,QAAQ,CAAE,CACxDU,OAAO,CAAE,CACP,cAAc,CAAE,qBAClB,CACF,CAAC,CAAC,CACF,MAAO,CAAAlB,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAEDkB,SAAS,CAAE,KAAO,CAAAhB,EAAE,EAAK,CACvB,GAAI,CACF,KAAM,CAAAT,GAAG,CAAC0B,MAAM,CAAC,QAAQjB,EAAE,GAAG,CAAC,CAC/B,MAAO,KAAI,CACb,CAAE,MAAOF,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAEDoB,aAAa,CAAE,KAAAA,CAAA,GAAY,CACzB,GAAI,CACF,KAAM,CAAAvB,QAAQ,CAAG,KAAM,CAAAJ,GAAG,CAACK,GAAG,CAAC,mBAAmB,CAAC,CACnD,MAAO,CAAAD,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CACb,CACF,CACF,CAAC,CAED,cAAe,CAAAN,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}