{"ast":null,"code":"import api from'./api';const FundraiserService={getAllFundraisers:async()=>{try{const response=await api.get('fundraisers/');return response.data;}catch(error){throw error;}},getFundraiserById:async id=>{try{const response=await api.get(`fundraisers/${id}/`);return response.data;}catch(error){throw error;}},createFundraiser:async fundraiserData=>{// Use FormData for image upload\nconst formData=new FormData();Object.keys(fundraiserData).forEach(key=>{if(key==='image'){formData.append(key,fundraiserData[key]);}else{formData.append(key,fundraiserData[key]);}});try{const response=await api.post('fundraisers/',formData,{headers:{'Content-Type':'multipart/form-data'}});return response.data;}catch(error){throw error;}},donate:async(fundraiserId,donationData)=>{try{const response=await api.post(`fundraisers/${fundraiserId}/donate/`,donationData);return response.data;}catch(error){throw error;}}};export default FundraiserService;","map":{"version":3,"names":["api","FundraiserService","getAllFundraisers","response","get","data","error","getFundraiserById","id","createFundraiser","fundraiserData","formData","FormData","Object","keys","forEach","key","append","post","headers","donate","fundraiserId","donationData"],"sources":["C:/Users/bogda/Pyton programs/Web application OP/MILITEX/militex/frontend/src/services/fundraiser.service.js"],"sourcesContent":["import api from './api';\r\n\r\nconst FundraiserService = {\r\n  getAllFundraisers: async () => {\r\n    try {\r\n      const response = await api.get('fundraisers/');\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  getFundraiserById: async (id) => {\r\n    try {\r\n      const response = await api.get(`fundraisers/${id}/`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  createFundraiser: async (fundraiserData) => {\r\n    // Use FormData for image upload\r\n    const formData = new FormData();\r\n    \r\n    Object.keys(fundraiserData).forEach((key) => {\r\n      if (key === 'image') {\r\n        formData.append(key, fundraiserData[key]);\r\n      } else {\r\n        formData.append(key, fundraiserData[key]);\r\n      }\r\n    });\r\n    \r\n    try {\r\n      const response = await api.post('fundraisers/', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  donate: async (fundraiserId, donationData) => {\r\n    try {\r\n      const response = await api.post(`fundraisers/${fundraiserId}/donate/`, donationData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n};\r\n\r\nexport default FundraiserService;\r\n"],"mappings":"AAAA,MAAO,CAAAA,GAAG,KAAM,OAAO,CAEvB,KAAM,CAAAC,iBAAiB,CAAG,CACxBC,iBAAiB,CAAE,KAAAA,CAAA,GAAY,CAC7B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAH,GAAG,CAACI,GAAG,CAAC,cAAc,CAAC,CAC9C,MAAO,CAAAD,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAEDC,iBAAiB,CAAE,KAAO,CAAAC,EAAE,EAAK,CAC/B,GAAI,CACF,KAAM,CAAAL,QAAQ,CAAG,KAAM,CAAAH,GAAG,CAACI,GAAG,CAAC,eAAeI,EAAE,GAAG,CAAC,CACpD,MAAO,CAAAL,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAEDG,gBAAgB,CAAE,KAAO,CAAAC,cAAc,EAAK,CAC1C;AACA,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAE/BC,MAAM,CAACC,IAAI,CAACJ,cAAc,CAAC,CAACK,OAAO,CAAEC,GAAG,EAAK,CAC3C,GAAIA,GAAG,GAAK,OAAO,CAAE,CACnBL,QAAQ,CAACM,MAAM,CAACD,GAAG,CAAEN,cAAc,CAACM,GAAG,CAAC,CAAC,CAC3C,CAAC,IAAM,CACLL,QAAQ,CAACM,MAAM,CAACD,GAAG,CAAEN,cAAc,CAACM,GAAG,CAAC,CAAC,CAC3C,CACF,CAAC,CAAC,CAEF,GAAI,CACF,KAAM,CAAAb,QAAQ,CAAG,KAAM,CAAAH,GAAG,CAACkB,IAAI,CAAC,cAAc,CAAEP,QAAQ,CAAE,CACxDQ,OAAO,CAAE,CACP,cAAc,CAAE,qBAClB,CACF,CAAC,CAAC,CACF,MAAO,CAAAhB,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAEDc,MAAM,CAAE,KAAAA,CAAOC,YAAY,CAAEC,YAAY,GAAK,CAC5C,GAAI,CACF,KAAM,CAAAnB,QAAQ,CAAG,KAAM,CAAAH,GAAG,CAACkB,IAAI,CAAC,eAAeG,YAAY,UAAU,CAAEC,YAAY,CAAC,CACpF,MAAO,CAAAnB,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CACb,CACF,CACF,CAAC,CAED,cAAe,CAAAL,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}