{"ast":null,"code":"// frontend/src/services/car.service.js\nimport api from'./api';const CarService={// Get all cars with optional filters\ngetAllCars:async function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};try{const response=await api.get('cars/',{params});return response.data;}catch(error){console.error('Error in getAllCars:',error);throw error;}},importFromAutoria:async function(){let limit=arguments.length>0&&arguments[0]!==undefined?arguments[0]:5;try{const response=await api.post('cars/import_from_autoria/',{limit});return response.data;}catch(error){throw error;}},getCarById:async id=>{try{const response=await api.get(`cars/${id}/`);return response.data;}catch(error){throw error;}},// Create a new car listing\ncreateCar:async carData=>{try{// For file uploads, use FormData\nconst formData=new FormData();// Add car data to formData\nObject.keys(carData).forEach(key=>{if(key!=='uploaded_images'){formData.append(key,carData[key]);}});// Add images to formData\nif(carData.uploaded_images&&carData.uploaded_images.length>0){carData.uploaded_images.forEach(image=>{formData.append('uploaded_images',image);});}const response=await api.post('cars/',formData,{headers:{'Content-Type':'multipart/form-data'}});return response.data;}catch(error){console.error('Error creating car listing:',error);throw error;}},// Update an existing car listing\nupdateCar:async(id,carData)=>{try{// Similar to createCar, use FormData for updates with images\nconst formData=new FormData();Object.keys(carData).forEach(key=>{if(key!=='uploaded_images'){formData.append(key,carData[key]);}});if(carData.uploaded_images&&carData.uploaded_images.length>0){carData.uploaded_images.forEach(image=>{formData.append('uploaded_images',image);});}const response=await api.patch(`cars/${id}/`,formData,{headers:{'Content-Type':'multipart/form-data'}});return response.data;}catch(error){console.error(`Error updating car with ID ${id}:`,error);throw error;}},// Delete a car listing\ndeleteCar:async id=>{try{await api.delete(`cars/${id}/`);return true;}catch(error){console.error(`Error deleting car with ID ${id}:`,error);throw error;}},// Get user's car listings\ngetMyListings:async()=>{try{const response=await api.get('cars/my_listings/');return response.data;}catch(error){console.error('Error fetching my listings:',error);throw error;}},// Search cars by query\nsearchCars:async searchQuery=>{try{const response=await api.get('cars/',{params:{search:searchQuery}});return response.data;}catch(error){console.error('Error searching cars:',error);throw error;}},// Filter cars by multiple criteria\nfilterCars:async filters=>{try{const response=await api.get('cars/',{params:filters});return response.data;}catch(error){console.error('Error filtering cars:',error);throw error;}},// Get featured cars for homepage\ngetFeaturedCars:async function(){let limit=arguments.length>0&&arguments[0]!==undefined?arguments[0]:3;try{const response=await api.get('cars/',{params:{limit:limit,ordering:'-created_at'// Get newest cars\n}});return response.data.results;}catch(error){console.error('Error fetching featured cars:',error);throw error;}}};export default CarService;","map":{"version":3,"names":["api","CarService","getAllCars","params","arguments","length","undefined","response","get","data","error","console","importFromAutoria","limit","post","getCarById","id","createCar","carData","formData","FormData","Object","keys","forEach","key","append","uploaded_images","image","headers","updateCar","patch","deleteCar","delete","getMyListings","searchCars","searchQuery","search","filterCars","filters","getFeaturedCars","ordering","results"],"sources":["C:/Users/bogda/Pyton programs/Web application OP/MILITEX/militex/frontend/src/services/car.service.js"],"sourcesContent":["// frontend/src/services/car.service.js\r\nimport api from './api';\r\n\r\nconst CarService = {\r\n  // Get all cars with optional filters\r\n  getAllCars: async (params = {}) => {\r\n    try {\r\n      const response = await api.get('cars/', { params });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error in getAllCars:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  importFromAutoria: async (limit = 5) => {\r\n    try {\r\n      const response = await api.post('cars/import_from_autoria/', { limit });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getCarById: async (id) => {\r\n    try {\r\n      const response = await api.get(`cars/${id}/`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Create a new car listing\r\n  createCar: async (carData) => {\r\n    try {\r\n      // For file uploads, use FormData\r\n      const formData = new FormData();\r\n\r\n      // Add car data to formData\r\n      Object.keys(carData).forEach((key) => {\r\n        if (key !== 'uploaded_images') {\r\n          formData.append(key, carData[key]);\r\n        }\r\n      });\r\n\r\n      // Add images to formData\r\n      if (carData.uploaded_images && carData.uploaded_images.length > 0) {\r\n        carData.uploaded_images.forEach((image) => {\r\n          formData.append('uploaded_images', image);\r\n        });\r\n      }\r\n\r\n      const response = await api.post('cars/', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error creating car listing:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Update an existing car listing\r\n  updateCar: async (id, carData) => {\r\n    try {\r\n      // Similar to createCar, use FormData for updates with images\r\n      const formData = new FormData();\r\n\r\n      Object.keys(carData).forEach((key) => {\r\n        if (key !== 'uploaded_images') {\r\n          formData.append(key, carData[key]);\r\n        }\r\n      });\r\n\r\n      if (carData.uploaded_images && carData.uploaded_images.length > 0) {\r\n        carData.uploaded_images.forEach((image) => {\r\n          formData.append('uploaded_images', image);\r\n        });\r\n      }\r\n\r\n      const response = await api.patch(`cars/${id}/`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error updating car with ID ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Delete a car listing\r\n  deleteCar: async (id) => {\r\n    try {\r\n      await api.delete(`cars/${id}/`);\r\n      return true;\r\n    } catch (error) {\r\n      console.error(`Error deleting car with ID ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Get user's car listings\r\n  getMyListings: async () => {\r\n    try {\r\n      const response = await api.get('cars/my_listings/');\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching my listings:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  // Search cars by query\r\n  searchCars: async (searchQuery) => {\r\n    try {\r\n      const response = await api.get('cars/', { \r\n        params: { \r\n          search: searchQuery \r\n        } \r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error searching cars:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  // Filter cars by multiple criteria\r\n  filterCars: async (filters) => {\r\n    try {\r\n      const response = await api.get('cars/', { \r\n        params: filters \r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error filtering cars:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  // Get featured cars for homepage\r\n  getFeaturedCars: async (limit = 3) => {\r\n    try {\r\n      const response = await api.get('cars/', { \r\n        params: {\r\n          limit: limit,\r\n          ordering: '-created_at'  // Get newest cars\r\n        }\r\n      });\r\n      return response.data.results;\r\n    } catch (error) {\r\n      console.error('Error fetching featured cars:', error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\nexport default CarService;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}